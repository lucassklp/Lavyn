// <auto-generated />
using System;
using Lavyn.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lavyn.Persistence.Migrations
{
    [DbContext(typeof(DaoContext))]
    partial class DaoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Lavyn.Domain.Entities.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasColumnType("MEDIUMTEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("RoomId")
                        .HasColumnName("room_id")
                        .HasColumnType("bigint");

                    b.Property<long>("SenderId")
                        .HasColumnName("sender_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("pk_messages");

                    b.HasIndex("RoomId")
                        .HasName("ix_messages_room_id");

                    b.HasIndex("SenderId")
                        .HasName("ix_messages_sender_id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("Lavyn.Domain.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasName("pk_role");

                    b.ToTable("role");
                });

            modelBuilder.Entity("Lavyn.Domain.Entities.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnName("type")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("pk_rooms");

                    b.HasIndex("Type")
                        .HasName("ix_rooms_type");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("Lavyn.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<bool>("IsOnline")
                        .HasColumnName("is_online")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnName("last_login")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("IsOnline")
                        .HasName("ix_user_is_online");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Lavyn.Domain.Entities.UserHasRole", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnName("role_id")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_user_has_roles");

                    b.HasIndex("RoleId")
                        .HasName("ix_user_has_roles_role_id");

                    b.ToTable("user_has_roles");
                });

            modelBuilder.Entity("Lavyn.Domain.Entities.UserHasRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint");

                    b.Property<long>("RoomId")
                        .HasColumnName("room_id")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("pk_user_has_room");

                    b.HasIndex("RoomId")
                        .HasName("ix_user_has_room_room_id");

                    b.HasIndex("UserId")
                        .HasName("ix_user_has_room_user_id");

                    b.ToTable("user_has_room");
                });

            modelBuilder.Entity("Lavyn.Domain.Entities.Message", b =>
                {
                    b.HasOne("Lavyn.Domain.Entities.Room", "Room")
                        .WithMany("Messages")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_messages_rooms_room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lavyn.Domain.Entities.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("fk_messages_user_sender_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lavyn.Domain.Entities.UserHasRole", b =>
                {
                    b.HasOne("Lavyn.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("fk_user_has_roles_role_role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lavyn.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_has_roles_user_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lavyn.Domain.Entities.UserHasRoom", b =>
                {
                    b.HasOne("Lavyn.Domain.Entities.Room", "Room")
                        .WithMany("Users")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_user_has_room_rooms_room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lavyn.Domain.Entities.User", "User")
                        .WithMany("UserRooms")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_has_room_user_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
